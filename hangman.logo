make "words [GUM SIN FOR CRY LUG BYE FLY
             UGLY EACH FROM WORK TALK WITH SELF
             PIZZA THING FEIGN FIEND ELBOW FAULT DIRTY
             BUDGET SPIRIT QUAINT MAIDEN ESCORT PICKAX
             EXAMPLE TENSION QUININE KIDNEY REPLICA SLEEPER
             TRIANGLE KANGAROO MAHOGANY SERGEANT SEQUENCE
             MOUSTACHE DANGEROUS SCIENTIST DIFFERENT QUIESCENT
             MAGISTRATE ERRONEOUSLY LOUDSPEAKER PHYTOTOXIC
             MATRIMONIAL PARASYMPATHOMIMETIC THIGMOTROPISM]
make "used []

make "word "
make "letters []
make "lettersRevealed []
make "lettersUsed []
make "lives 10


to drawPicture
    if :lives = 9 [
        print [.............]
        print [.............]
        print [.....---.....]
        print [....(".")....]
        print [.....---.....]
        print [.............]
        print [.............]
        print [.............]
        print [.............]
        print [.............]
        print [.............]
        print [.............]
    ]

    if :lives = 8 [
        print [NOW WE DRAW A BODY.]
        print [.............]
        print [.............]
        print [.....---.....]
        print [....(".")....]
        print [.....---.....]
        print [......X......]
        print [......X......]
        print [......X......]
        print [......X......]
        print [.............]
        print [.............]
        print [.............]
    ]

    if :lives = 7 [
        print [NEXT WE DRAW AN ARM.]
        print [.............]
        print [.............]
        print [.....---.....]
        print [..\\.(".")....]
        print [...\\.---.....]
        print [....\\.X......]
        print [.....\\X......]
        print [......X......]
        print [......X......]
        print [.............]
        print [.............]
        print [.............]
    ]

    if :lives = 6 [
        print [THIS TIME IT'S THE OTHER ARM.]
        print [.............]
        print [.............]
        print [.....---.....]
        print [..\\.(".")./..]
        print [...\\.---./...]
        print [....\\.X./....]
        print [.....\\X/.....]
        print [......X......]
        print [......X......]
        print [.............]
        print [.............]
        print [.............]
    ]

    if :lives = 5 [
        print [NOW, LET'S DRAW THE RIGHT LEG.]
        print [.............]
        print [.............]
        print [.....---.....]
        print [..\\.(".")./..]
        print [...\\.---./...]
        print [....\\.X./....]
        print [.....\\X/.....]
        print [......X......]
        print [......X......]
        print [...../.......]
        print [..../........]
        print [.............]
    ]

    if :lives = 4 [
        print [THIS TIME WE DRAW THE LEFT LEG.]
        print [.............]
        print [.............]
        print [.....---.....]
        print [..\\.(".")./..]
        print [...\\.---./...]
        print [....\\.X./....]
        print [.....\\X/.....]
        print [......X......]
        print [......X......]
        print [...../.\\.....]
        print [..../...\\....]
        print [.............]
    ]

    if :lives = 3 [
        print [NOW WE PUT UP A HAND.]
        print [.............]
        print [.............]
        print [.....---..\\..]
        print [..\\.(".")./..]
        print [...\\.---./...]
        print [....\\.X./....]
        print [.....\\X/.....]
        print [......X......]
        print [......X......]
        print [...../.\\.....]
        print [..../...\\....]
        print [.............]
    ]

    if :lives = 2 [
        print [NEXT THE OTHER HAND.]
        print [.............]
        print [.............]
        print [../..---..\\..]
        print [..\\.(".")./..]
        print [...\\.---./...]
        print [....\\.X./....]
        print [.....\\X/.....]
        print [......X......]
        print [......X......]
        print [...../.\\.....]
        print [..../...\\....]
        print [.............]
    ]

    if :lives = 1 [
        print [NOW WE DRAW ONE FOOT]
        print [.............]
        print [.............]
        print [../..---..\\..]
        print [..\\.(".")./..]
        print [...\\.---./...]
        print [....\\.X./....]
        print [.....\\X/.....]
        print [......X......]
        print [......X......]
        print [...../.\\.....]
        print [..../...\\-...]
        print [.............]
    ]

    if :lives = 0 [
        print [HERE'S THE OTHER FOOT! YOU'RE OUT OF LIVES!]
        print [.............]
        print [.............]
        print [../..---..\\..]
        print [..\\.(".")./..]
        print [...\\.---./...]
        print [....\\.X./....]
        print [.....\\X/.....]
        print [......X......]
        print [......X......]
        print [...../.\\.....]
        print [...-/...\\-...]
        print [.............]
    ]
end

to readLetter
    print [WHAT IS YOUR GUESS? ]
    make "input readword
    print "

    if (member? :input :lettersUsed) [
        print [YOU GUESSED THAT LETTER BEFORE!]
        output 0
    ]

    output 1
end

to gameLoop 
    print [HERE ARE THE LETTERS YOU USED:]
    print :lettersUsed
    print "
    print :lettersRevealed
    print "

    make "found 0
    while [:found = 0] [
        make "found readLetter
    ]
    make "lettersUsed lput :input :lettersUsed

    make "found 0
    repeat count :letters [
        if (item repcount :letters) = :input [
            setitem repcount :lettersRevealed :input
            make "found 1
        ]
    ]

    if :found = 0 [
        print [SORRY, THAT LETTER ISN'T IN THE WORD.]
        make "lives :lives - 1
        drawPicture
        stop
    ]

    print :lettersRevealed
    print "
    print [WHAT IS YOUR GUESS FOR THE WORD]
    make "input readword

    if :input = :word [
        make "num 10 - :lives
        print sentence [RIGHT!!  IT TOOK YOU ] :num [GUESSES!]
        print [WANT ANOTHER WORD]
        make "input readword

    ]
end

to hangman
    print "
    print [HANGMAN]
    print [CREATIVE COMPUTING  MORRISTOWN, NEW JERSEY]
    print "
    print "
    print "

    forever [
        if (count :used) >= (count :words) [
            print [YOU DID ALL THE WORDS!!]
            stop
        ]

        make "letters []
        make "lettersRevealed []
        make "lettersUsed []
        make "lives 10

        make "randomI (random count :words) + 1
        make "word item :randomI :words
        while [member? :word :used] [
            make "randomI (random count :words) + 1
            make "word item :randomI :words
        ]
        make "used lput :word :used

        repeat count :word [
            make "letters sentence :letters (item repcount :word)
        ]

        repeat count :letters [
            make "lettersRevealed lput "- :lettersRevealed
        ]

        make "lettersRevealed listtoarray :lettersRevealed

        while [lives > 0] [
            gameLoop
        ]

        print sentence [SORRY, YOU LOSE.  THE WORD WAS ] :word
        print "
    ]
end

hangman
